version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: label_postgres
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-label_db}
      POSTGRES_USER: ${POSTGRES_USER:-label_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-your_secure_password_here}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d
    networks:
      - label_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-label_user} -d ${POSTGRES_DB:-label_db}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: .
    container_name: label_backend
    restart: always
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      DATABASE_URL: postgresql://${POSTGRES_USER:-label_user}:${POSTGRES_PASSWORD:-your_secure_password_here}@postgres:5432/${POSTGRES_DB:-label_db}?schema=public
      JWT_SECRET: ${JWT_SECRET:-your_jwt_secret_key_here}
      PORT: ${BACKEND_PORT:-3001}
    ports:
      - "${BACKEND_PORT:-3001}:3001"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - label_network
    volumes:
      - ./uploads:/app/uploads

volumes:
  postgres_data:

networks:
  label_network:
    driver: bridge
